// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformaBlogsPersonales.Infraestructura.DataContext;

#nullable disable

namespace PlataformaBlogsPersonales.Infraestructura.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    partial class BlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.Articulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AUTOR");

                    b.Property<bool>("ComentariosHabilitados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("COMENTARIOS_HABILITADOS");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTENIDO");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_ACTUALIZACION");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_CREACION");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_ELIMINACION");

                    b.Property<Guid>("IdCategoria")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<int>("NumeroVisitas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("NUMERO_VISITAS");

                    b.Property<bool>("RegistroEliminado")
                        .HasColumnType("bit")
                        .HasColumnName("REGISTRO_ELIMINADO");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("RESUMEN");

                    b.Property<string>("SlugImagen")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("SLUG_IMAGEN");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TITULO");

                    b.Property<string>("UsuarioActualizacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_ACTUALIZACION");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_CREACION");

                    b.Property<string>("UsuarioEliminacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_ELIMINACION");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("ARTICULO", (string)null);
                });

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.ArticuloEtiqueta", b =>
                {
                    b.Property<Guid>("IdArticulo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<Guid>("IdEtiqueta")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ETIQUETA");

                    b.HasKey("IdArticulo", "IdEtiqueta");

                    b.HasIndex("IdEtiqueta");

                    b.ToTable("ARTICULO_ETIQUETA", (string)null);
                });

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_ACTUALIZACION");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_CREACION");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_ELIMINACION");

                    b.Property<Guid>("IdArticulo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOMBRE");

                    b.Property<bool>("RegistroEliminado")
                        .HasColumnType("bit")
                        .HasColumnName("REGISTRO_ELIMINADO");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("SLUG");

                    b.Property<string>("UsuarioActualizacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_ACTUALIZACION");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_CREACION");

                    b.Property<string>("UsuarioEliminacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_ELIMINACION");

                    b.HasKey("Id");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.Etiqueta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_ACTUALIZACION");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_CREACION");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_ELIMINACION");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOMBRE");

                    b.Property<bool>("RegistroEliminado")
                        .HasColumnType("bit")
                        .HasColumnName("REGISTRO_ELIMINADO");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("SLUG");

                    b.Property<string>("UsuarioActualizacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_ACTUALIZACION");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_CREACION");

                    b.Property<string>("UsuarioEliminacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_ELIMINACION");

                    b.HasKey("Id");

                    b.ToTable("ETIQUETA", (string)null);
                });

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.Articulo", b =>
                {
                    b.HasOne("PlataformaBlogsPersonales.Model.Models.Categoria", "Categorias")
                        .WithMany("Articulos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");
                });

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.ArticuloEtiqueta", b =>
                {
                    b.HasOne("PlataformaBlogsPersonales.Model.Models.Articulo", "Articulo")
                        .WithMany("ArticuloEtiquetas")
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlataformaBlogsPersonales.Model.Models.Etiqueta", "Etiqueta")
                        .WithMany("ArticuloEtiquetas")
                        .HasForeignKey("IdEtiqueta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Etiqueta");
                });

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.Articulo", b =>
                {
                    b.Navigation("ArticuloEtiquetas");
                });

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.Categoria", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("PlataformaBlogsPersonales.Model.Models.Etiqueta", b =>
                {
                    b.Navigation("ArticuloEtiquetas");
                });
#pragma warning restore 612, 618
        }
    }
}
